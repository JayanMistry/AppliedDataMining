QUESTION 1. 
Created api account - check account and pulled data using oauth config


QUESTION 2.
python3 search tweets.py realDonaldTrump 500 

# Check the file...

Discard tweets by setting parameter exclude_replies=true - see example below
https://api.twitter.com/1.1/statuses/user_timeline.json?screen_name=twitterapi&count=2&exclude_replies=true

python3 search tweets.py "#lovelancaster" 500


QUESTION 3.
Function below made to output time and text in json format

def to_just_time_and_text(tweets, filepath="tweets.txt"):
    atts=['full_text', 'created_at',]
    minimal_tweets = [{k:tweet[k] for k in atts} for tweet in tweets]
    with open(filepath, 'w') as f:
        #Dump json file. indent=4 prints the output prettier, but will increase disk space.
        json.dump(minimal_tweets, f, indent=4)


QUESTION 4.

1. Find tweets from the @LancasterUni account mentioning snow.

python search_tweets.py 'from:LancasterUni AND snow ' 100

2. Find tweets mentioning snow and the #lovelancaster hashtag, which are not retweets.

 python search_tweets.py "#lovelancaster AND snow -filter:retweets" 100

3. Find tweets mentioning snow from the Lancaster area.

 # Added geo location
 python search_tweets.py "snow" 100

QUESTION 5.
1. Many other methods are available from twython linked to Twitter API requests:
https://twython.readthedocs.io/en/latest/api.html. One potentially useful task
you should be able perform by adapting the available code is to collect the user details
of a given account (see show user).

# get current api account
twitter.verify_credentials()
twitter.show_user(screen_name="lancasteruni")

Using 

{
    "contributors_enabled": true,
    "created_at": "Sat May 09 17:58:22 +0000 2009",
    "default_profile": false,
    "default_profile_image": false,
    "description": "I taught your phone that thing you like.  The Mobile Partner Engineer @Twitter. ",
    "favourites_count": 588,
    "follow_request_sent": null,
    "followers_count": 10625,
    "following": null,
    "friends_count": 1181,
    "geo_enabled": true,
    "id": 38895958,
    "id_str": "38895958",
    "is_translator": false,
    "lang": "en",
    "listed_count": 190,
    "location": "San Francisco",
    "name": "Sean Cook",
    "notifications": null,
    "profile_background_color": "1A1B1F",
    "profile_background_image_url": "http://a0.twimg.com/profile_background_images/495742332/purty_wood.png",
    "profile_background_image_url_https": "https://si0.twimg.com/profile_background_images/495742332/purty_wood.png",
    "profile_background_tile": true,
    "profile_image_url": "http://a0.twimg.com/profile_images/1751506047/dead_sexy_normal.JPG",
    "profile_image_url_https": "https://si0.twimg.com/profile_images/1751506047/dead_sexy_normal.JPG",
    "profile_link_color": "2FC2EF",
    "profile_sidebar_border_color": "181A1E",
    "profile_sidebar_fill_color": "252429",
    "profile_text_color": "666666",
    "profile_use_background_image": true,
    "protected": false,
    "screen_name": "theSeanCook",
    "show_all_inline_media": true,
    "status": {
        "contributors": null,
        "coordinates": {
            "coordinates": [
                -122.45037293,
                37.76484123
            ],
            "type": "Point"
        },
        "created_at": "Tue Aug 28 05:44:24 +0000 2012",
        "favorited": false,
        "geo": {
            "coordinates": [
                37.76484123,
                -122.45037293
            ],
            "type": "Point"
        },
        "id": 240323931419062272,
        "id_str": "240323931419062272",
        "in_reply_to_screen_name": "messl",
        "in_reply_to_status_id": 240316959173009410,
        "in_reply_to_status_id_str": "240316959173009410",
        "in_reply_to_user_id": 18707866,
        "in_reply_to_user_id_str": "18707866",
        "place": {
            "attributes": {},
            "bounding_box": {
                "coordinates": [
                    [
                        [
                            -122.45778216,
                            37.75932999
                        ],
                        [
                            -122.44248216,
                            37.75932999
                        ],
                        [
                            -122.44248216,
                            37.76752899
                        ],
                        [
                            -122.45778216,
                            37.76752899
                        ]
                    ]
                ],
                "type": "Polygon"
            },
            "country": "United States",
            "country_code": "US",
            "full_name": "Ashbury Heights, San Francisco",
            "id": "866269c983527d5a",
            "name": "Ashbury Heights",
            "place_type": "neighborhood",
            "url": "http://api.twitter.com/1/geo/id/866269c983527d5a.json"
        },
        "retweet_count": 0,
        "retweeted": false,
        "source": "Twitter for  iPhone",
        "text": "@messl congrats! So happy for all 3 of you.",
        "truncated": false
    },
    "statuses_count": 2609,
    "time_zone": "Pacific Time (US & Canada)",
    "url": null,
    "utc_offset": -28800,
    "verified": false
}





2. Expanding on 1., you could collect a list of users (e.g. a userâ€™s followers) and then
collect all of their user information and tweets.

# Returns a list of tuples with user info and followers
result = []
twitter = Twython()
followers = twitter.get_followers_ids(screen_name = "lancasteruni")
for each fol_id in followers:
	followersinfo   = twitter.show_user(user_id = fol_id)
	followersTweets = twitter.search(q='from:fol_id',tweet_mode="extended",count=100)
	result.append( (followersinfo,followersTweets) )



3. You can use the Twitter Streaming API to collect tweets in real-time as they are
posted. See the instructions for implementing this with twython: https://twython.
readthedocs.io/en/latest/usage/streaming_api.html, and attempt to collect all
tweets mentioning a word of interest.

# Use tweepy 
#This handles Twitter authetification and the connection to Twitter Streaming API
    l = StdOutListener()
    auth = OAuthHandler(consumer_key, consumer_secret)
    auth.set_access_token(access_token, access_token_secret)
    stream = Stream(auth, l)
stream.filter(track=['IAmsterdam'], languages=['en'])

